<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Georgia, 'Times New Roman', serif;
            background: #fdfcfa;
            color: #2c2c2c;
            line-height: 1.5;
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        /* Header */
        header {
            margin-bottom: 1.5rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid #111;
        }

        h1 {
            font-size: 1.3rem;
            font-weight: normal;
            margin-bottom: 0.25rem;
        }

        .subtitle {
            font-size: 0.85rem;
            color: #666;
            font-style: italic;
        }

        /* Navigation */
        .nav {
            display: flex;
            gap: 0;
            margin-bottom: 1.5rem;
            border-bottom: 2px solid #111;
            border-top: 1px solid #111;
            background: #f8f8f8;
        }

        .nav a {
            padding: 0.4rem 1rem;
            color: #111;
            text-decoration: none;
            font-size: 0.85rem;
            border-right: 1px solid #ddd;
        }

        .nav a:hover {
            background: #fff;
            text-decoration: underline;
        }

        .nav a.active {
            background: #fff;
            font-weight: bold;
        }

        /* Settings sections */
        .settings-section {
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px dotted #ccc;
        }

        .settings-section:last-child {
            border-bottom: none;
        }

        .section-title {
            font-size: 1.1rem;
            font-weight: normal;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #111;
        }

        /* Setting row */
        .setting-row {
            display: grid;
            grid-template-columns: 250px 1fr;
            gap: 2rem;
            margin-bottom: 1.5rem;
            align-items: start;
        }

        .setting-label {
            text-align: right;
            padding-top: 0.25rem;
        }

        .label-text {
            font-size: 0.9rem;
            color: #111;
        }

        .label-description {
            font-size: 0.75rem;
            color: #666;
            font-style: italic;
            margin-top: 0.25rem;
        }

        /* Trade-off slider with labels */
        .tradeoff-control {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .tradeoff-slider {
            position: relative;
            height: 40px;
            background: linear-gradient(to right, #f0f0f0 0%, #666 100%);
            border: 1px solid #999;
        }

        .slider-handle {
            position: absolute;
            width: 20px;
            height: 100%;
            background: #111;
            border: 2px solid #fff;
            cursor: ew-resize;
            top: 0;
        }

        .slider-value {
            position: absolute;
            top: -20px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.85rem;
            font-weight: bold;
            background: #fff;
            padding: 0 0.25rem;
        }

        .tradeoff-labels {
            display: flex;
            justify-content: space-between;
            font-size: 0.8rem;
            color: #666;
        }

        .tradeoff-scale {
            display: flex;
            justify-content: space-between;
            font-size: 0.7rem;
            color: #999;
            margin-top: 0.25rem;
        }

        /* Choice matrix for discrete options */
        .choice-matrix {
            display: grid;
            gap: 0.5rem;
            max-width: 600px;
        }

        .choice-option {
            display: grid;
            grid-template-columns: 30px 150px 1fr;
            gap: 1rem;
            padding: 0.75rem;
            border: 1px solid #e0e0e0;
            cursor: pointer;
            transition: all 0.2s;
        }

        .choice-option:hover {
            background: #f8f8f8;
            border-color: #999;
        }

        .choice-option.selected {
            background: #111;
            color: #fff;
            border-color: #111;
        }

        .choice-option.selected .option-details {
            color: #ccc;
        }

        .choice-radio {
            width: 16px;
            height: 16px;
            border: 2px solid #666;
            border-radius: 50%;
            position: relative;
        }

        .choice-option.selected .choice-radio::after {
            content: '';
            position: absolute;
            width: 8px;
            height: 8px;
            background: #fff;
            border-radius: 50%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .option-name {
            font-weight: normal;
        }

        .option-details {
            font-size: 0.8rem;
            color: #666;
        }

        /* Balance control */
        .balance-control {
            display: flex;
            align-items: center;
            gap: 1rem;
            max-width: 600px;
        }

        .balance-bar {
            flex: 1;
            height: 30px;
            position: relative;
            background: #f0f0f0;
            border: 1px solid #999;
        }

        .balance-fill {
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            background: #111;
            transition: width 0.2s;
        }

        .balance-markers {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 100%;
            display: flex;
        }

        .balance-marker {
            flex: 1;
            border-right: 1px dotted #999;
        }

        .balance-marker:last-child {
            border-right: none;
        }

        .balance-value {
            position: absolute;
            top: 50%;
            left: var(--position);
            transform: translate(-50%, -50%);
            background: #fff;
            padding: 0 0.5rem;
            font-size: 0.85rem;
            font-weight: bold;
            border: 1px solid #666;
        }

        /* Numeric input with context */
        .numeric-control {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            max-width: 400px;
        }

        .numeric-input-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .numeric-input {
            width: 100px;
            padding: 0.3rem 0.5rem;
            border: 1px solid #ccc;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
            text-align: right;
        }

        .numeric-unit {
            font-size: 0.85rem;
            color: #666;
        }

        .numeric-context {
            display: flex;
            justify-content: space-between;
            font-size: 0.75rem;
            color: #666;
            padding: 0.25rem 0;
        }

        /* Text options as inline choices */
        .text-choices {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .text-choice {
            padding: 0.4rem 0.8rem;
            border: 1px solid #ccc;
            background: #fff;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.2s;
        }

        .text-choice:hover {
            border-color: #666;
            background: #f8f8f8;
        }

        .text-choice.selected {
            background: #111;
            color: #fff;
            border-color: #111;
        }

        /* Coordinate input */
        .coordinate-input {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            max-width: 400px;
        }

        .coord-field {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .coord-label {
            font-size: 0.8rem;
            color: #666;
        }

        .coord-input {
            padding: 0.3rem 0.5rem;
            border: 1px solid #ccc;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
        }

        /* Submit controls */
        .form-controls {
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid #111;
            display: flex;
            gap: 2rem;
            align-items: baseline;
        }

        .submit-button {
            background: none;
            border: 1px solid #111;
            padding: 0.5rem 1.5rem;
            font-family: inherit;
            font-size: 0.9rem;
            cursor: pointer;
        }

        .submit-button:hover {
            background: #111;
            color: #fff;
        }

        .action-link {
            color: #666;
            text-decoration: underline;
            font-size: 0.85rem;
        }

        .action-link:hover {
            color: #111;
        }

        /* Screen reader only text */
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0,0,0,0);
            white-space: nowrap;
            border: 0;
        }

        /* Focus styles for accessibility */
        *:focus {
            outline: 2px solid #111;
            outline-offset: 2px;
        }

        /* Status messages */
        .status-message {
            padding: 0.75rem;
            margin-bottom: 1rem;
            border-left: 3px solid #666;
            background: #f8f8f8;
            font-size: 0.85rem;
        }

        .status-success {
            border-color: #4caf50;
        }

        .status-error {
            border-color: #d32f2f;
        }
    </style>
</head>
<body>
    <header>
        <h1>System Configuration</h1>
        <p class="subtitle">BirdNET-Pi detection parameters and integration settings</p>
    </header>

    <!-- Navigation -->
    <nav class="nav" role="navigation" aria-label="Main navigation">
        <a href="/">Dashboard</a>
        <a href="/reports/detections">Detections</a>
        <a href="/reports/best">Best Recordings</a>
        <a href="/livestream">Livestream</a>
        <a href="/reports">Analysis</a>
        <a href="/field">Field Mode</a>
        <a href="/admin/settings" class="active">Settings</a>
    </nav>

    <form method="post" action="/admin/settings" role="form" aria-label="System settings">
        <!-- Core Detection Settings -->
        <section class="settings-section" aria-labelledby="detection-title">
            <h2 class="section-title" id="detection-title">Detection Parameters</h2>

            <!-- Confidence Threshold -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Confidence Threshold</div>
                    <div class="label-description">Balance between catching everything and accuracy</div>
                </div>
                <div class="tradeoff-control" role="group" aria-labelledby="confidence-label">
                    <div class="tradeoff-slider"
                         role="slider"
                         aria-label="Confidence threshold"
                         aria-valuenow="70"
                         aria-valuemin="50"
                         aria-valuemax="95"
                         tabindex="0">
                        <div class="slider-handle" style="left: 40%;">
                            <div class="slider-value">0.70</div>
                        </div>
                    </div>
                    <div class="tradeoff-labels">
                        <span>More detections<br><small>More false positives</small></span>
                        <span>Higher accuracy<br><small>Miss quiet calls</small></span>
                    </div>
                    <div class="tradeoff-scale">
                        <span>0.50</span>
                        <span>0.60</span>
                        <span>0.70</span>
                        <span>0.80</span>
                        <span>0.90</span>
                        <span>0.95</span>
                    </div>
                </div>
            </div>

            <!-- Sensitivity -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Detection Sensitivity</div>
                    <div class="label-description">Adjust for your environment's noise level</div>
                </div>
                <div class="balance-control" role="group" aria-labelledby="sensitivity-label">
                    <span>Quiet</span>
                    <div class="balance-bar"
                         role="slider"
                         aria-label="Detection sensitivity"
                         aria-valuenow="1.25"
                         aria-valuemin="0.5"
                         aria-valuemax="2.0"
                         tabindex="0">
                        <div class="balance-markers">
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                        </div>
                        <div class="balance-fill" style="width: 50%;"></div>
                        <div class="balance-value" style="--position: 50%;">1.25</div>
                    </div>
                    <span>Noisy</span>
                </div>
            </div>

            <!-- Overlap -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Analysis Overlap</div>
                    <div class="label-description">Processing vs detection completeness</div>
                </div>
                <div class="numeric-control">
                    <div class="numeric-input-group">
                        <input type="number"
                               class="numeric-input"
                               value="1.5"
                               min="0"
                               max="3.0"
                               step="0.5"
                               id="overlap"
                               aria-label="Analysis overlap in seconds">
                        <span class="numeric-unit">seconds</span>
                    </div>
                    <div class="numeric-context">
                        <span>↓ Less CPU usage</span>
                        <span>More complete detection ↑</span>
                    </div>
                    <div class="numeric-context" style="color: #999;">
                        <span>0s: No overlap</span>
                        <span>1.5s: Balanced</span>
                        <span>3s: Maximum</span>
                    </div>
                </div>
            </div>
        </section>

        <!-- Hardware Configuration -->
        <section class="settings-section" aria-labelledby="hardware-title">
            <h2 class="section-title" id="hardware-title">Hardware Configuration</h2>

            <!-- Audio Device -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Audio Input</div>
                    <div class="label-description">Recording device selection</div>
                </div>
                <div class="choice-matrix" role="radiogroup" aria-labelledby="audio-label">
                    <div class="choice-option selected"
                         role="radio"
                         aria-checked="true"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">USB Audio Device</div>
                        <div class="option-details">48 kHz · 16-bit · Low latency · Currently active</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">Built-in BCM2835</div>
                        <div class="option-details">44.1 kHz · 16-bit · Higher latency · Power efficient</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">I2S Microphone</div>
                        <div class="option-details">48 kHz · 24-bit · Best quality · Requires HAT</div>
                    </div>
                </div>
            </div>

            <!-- AI Model -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Detection Model</div>
                    <div class="label-description">AI model selection</div>
                </div>
                <div class="choice-matrix" role="radiogroup" aria-labelledby="model-label">
                    <div class="choice-option selected"
                         role="radio"
                         aria-checked="true"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">BirdNET_6K2_V2.4</div>
                        <div class="option-details">Latest · 6000 species · 142ms/detection · Recommended</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">BirdNET_GLOBAL_3K_V2.3</div>
                        <div class="option-details">Stable · 3000 species · 98ms/detection · Faster</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">Custom TFLite Model</div>
                        <div class="option-details">Upload your own · Variable performance</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Location Settings -->
        <section class="settings-section" aria-labelledby="location-title">
            <h2 class="section-title" id="location-title">Location</h2>

            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Coordinates</div>
                    <div class="label-description">For species list and sunrise/sunset</div>
                </div>
                <div class="coordinate-input">
                    <div class="coord-field">
                        <label class="coord-label" for="latitude">Latitude</label>
                        <input type="number"
                               class="coord-input"
                               id="latitude"
                               value="42.9834"
                               min="-90"
                               max="90"
                               step="0.0001"
                               aria-label="Latitude in decimal degrees">
                    </div>
                    <div class="coord-field">
                        <label class="coord-label" for="longitude">Longitude</label>
                        <input type="number"
                               class="coord-input"
                               id="longitude"
                               value="-79.0103"
                               min="-180"
                               max="180"
                               step="0.0001"
                               aria-label="Longitude in decimal degrees">
                    </div>
                </div>
            </div>

            <!-- Timezone -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Timezone</div>
                    <div class="label-description">For scheduling and timestamps</div>
                </div>
                <div class="text-choices" role="radiogroup" aria-label="Timezone selection">
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Toronto
                    </button>
                    <button type="button" class="text-choice selected" onclick="selectTextOption(this)">
                        America/New_York
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Chicago
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Denver
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Los_Angeles
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        UTC
                    </button>
                </div>
            </div>
        </section>

        <!-- Notification Settings -->
        <section class="settings-section" aria-labelledby="notification-title">
            <h2 class="section-title" id="notification-title">Notifications</h2>

            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Notification Frequency</div>
                    <div class="label-description">When to send alerts</div>
                </div>
                <div class="choice-matrix" role="group" aria-labelledby="notification-freq-label">
                    <label class="choice-option">
                        <input type="checkbox" class="sr-only" name="notify_each" checked>
                        <div class="choice-radio"></div>
                        <div class="option-name">Each Detection</div>
                        <div class="option-details">Every bird detected above threshold</div>
                    </label>
                    <label class="choice-option">
                        <input type="checkbox" class="sr-only" name="notify_new_species" checked>
                        <div class="choice-radio"></div>
                        <div class="option-name">New Species</div>
                        <div class="option-details">First time a species is detected</div>
                    </label>
                    <label class="choice-option">
                        <input type="checkbox" class="sr-only" name="notify_daily_new">
                        <div class="choice-radio"></div>
                        <div class="option-name">Daily New Species</div>
                        <div class="option-details">First detection of each species per day</div>
                    </label>
                </div>
            </div>
        </section>

        <!-- Form Controls -->
        <div class="form-controls">
            <button type="submit" class="submit-button">Save Configuration</button>
            <a href="/admin/advanced-settings" class="action-link">YAML Editor</a>
            <a href="/admin/export-config" class="action-link">Export Settings</a>
            <a href="/admin/import-config" class="action-link">Import Settings</a>
            <span class="action-link" style="margin-left: auto;">Last saved: 2025-01-15 14:32:18</span>
        </div>
    </form>

    <script>
        // Handle choice selection
        function selectOption(element) {
            const group = element.closest('[role="radiogroup"]');
            group.querySelectorAll('.choice-option').forEach(opt => {
                opt.classList.remove('selected');
                opt.setAttribute('aria-checked', 'false');
            });
            element.classList.add('selected');
            element.setAttribute('aria-checked', 'true');
        }

        // Handle text option selection
        function selectTextOption(element) {
            const group = element.parentElement;
            group.querySelectorAll('.text-choice').forEach(opt => {
                opt.classList.remove('selected');
            });
            element.classList.add('selected');
        }

        // Keyboard navigation for sliders
        document.querySelectorAll('[role="slider"]').forEach(slider => {
            slider.addEventListener('keydown', (e) => {
                const currentValue = parseFloat(slider.getAttribute('aria-valuenow'));
                const min = parseFloat(slider.getAttribute('aria-valuemin'));
                const max = parseFloat(slider.getAttribute('aria-valuemax'));
                const step = (max - min) / 10;

                let newValue = currentValue;

                switch(e.key) {
                    case 'ArrowLeft':
                    case 'ArrowDown':
                        newValue = Math.max(min, currentValue - step);
                        e.preventDefault();
                        break;
                    case 'ArrowRight':
                    case 'ArrowUp':
                        newValue = Math.min(max, currentValue + step);
                        e.preventDefault();
                        break;
                    case 'Home':
                        newValue = min;
                        e.preventDefault();
                        break;
                    case 'End':
                        newValue = max;
                        e.preventDefault();
                        break;
                }

                if (newValue !== currentValue) {
                    updateSliderValue(slider, newValue, min, max);
                }
            });
        });

        // Update slider value and position
        function updateSliderValue(slider, value, min, max) {
            const percent = ((value - min) / (max - min)) * 100;
            slider.setAttribute('aria-valuenow', value);

            const handle = slider.querySelector('.slider-handle');
            if (handle) {
                handle.style.left = percent + '%';
                const valueDisplay = handle.querySelector('.slider-value');
                if (valueDisplay) {
                    valueDisplay.textContent = value.toFixed(2);
                }
            }

            const fill = slider.querySelector('.balance-fill');
            if (fill) {
                fill.style.width = percent + '%';
            }

            const balanceValue = slider.querySelector('.balance-value');
            if (balanceValue) {
                balanceValue.style.setProperty('--position', percent + '%');
                balanceValue.textContent = value.toFixed(2);
            }
        }

        // Make sliders draggable
        document.querySelectorAll('.slider-handle, .balance-bar').forEach(element => {
            let isDragging = false;
            const slider = element.closest('[role="slider"]') || element;

            element.addEventListener('mousedown', (e) => {
                isDragging = true;
                e.preventDefault();
            });

            document.addEventListener('mousemove', (e) => {
                if (!isDragging) return;

                const rect = slider.getBoundingClientRect();
                const percent = Math.max(0, Math.min(100, ((e.clientX - rect.left) / rect.width) * 100));

                const min = parseFloat(slider.getAttribute('aria-valuemin'));
                const max = parseFloat(slider.getAttribute('aria-valuemax'));
                const value = min + (percent / 100) * (max - min);

                updateSliderValue(slider, value, min, max);
            });

            document.addEventListener('mouseup', () => {
                isDragging = false;
            });
        });
    </script>
</body>
</html>
