<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings</title>
    <link rel="stylesheet" href="{{ request.url_for('static', path='style.css') }}">
</head>
<body>
    <header>
        <h1>System Configuration</h1>
        <p class="subtitle">BirdNET-Pi detection parameters and integration settings</p>
    </header>

    <!-- Navigation -->
    <nav class="nav" role="navigation" aria-label="Main navigation">
        <a href="/">Dashboard</a>
        <a href="/reports/detections">Detections</a>
        <a href="/reports/best">Best Recordings</a>
        <a href="/livestream">Livestream</a>
        <a href="/reports">Analysis</a>
        <a href="/field">Field Mode</a>
        <a href="/admin/settings" class="active">Settings</a>
    </nav>

    <form method="post" action="/admin/settings" role="form" aria-label="System settings">
        <!-- Core Detection Settings -->
        <section class="settings-section" aria-labelledby="detection-title">
            <h2 class="section-title" id="detection-title">Detection Parameters</h2>

            <!-- Confidence Threshold -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Confidence Threshold</div>
                    <div class="label-description">Balance between catching everything and accuracy</div>
                </div>
                <div class="tradeoff-control" role="group" aria-labelledby="confidence-label">
                    <div class="tradeoff-slider"
                         role="slider"
                         aria-label="Confidence threshold"
                         aria-valuenow="70"
                         aria-valuemin="50"
                         aria-valuemax="95"
                         tabindex="0">
                        <div class="slider-handle" data-position="40">
                            <div class="slider-value">0.70</div>
                        </div>
                    </div>
                    <div class="tradeoff-labels">
                        <span>More detections<br><small>More false positives</small></span>
                        <span>Higher accuracy<br><small>Miss quiet calls</small></span>
                    </div>
                    <div class="tradeoff-scale">
                        <span>0.50</span>
                        <span>0.60</span>
                        <span>0.70</span>
                        <span>0.80</span>
                        <span>0.90</span>
                        <span>0.95</span>
                    </div>
                </div>
            </div>

            <!-- Sensitivity -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Detection Sensitivity</div>
                    <div class="label-description">Adjust for your environment's noise level</div>
                </div>
                <div class="balance-control" role="group" aria-labelledby="sensitivity-label">
                    <span>Quiet</span>
                    <div class="balance-bar"
                         role="slider"
                         aria-label="Detection sensitivity"
                         aria-valuenow="1.25"
                         aria-valuemin="0.5"
                         aria-valuemax="2.0"
                         tabindex="0">
                        <div class="balance-markers">
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                            <div class="balance-marker"></div>
                        </div>
                        <div class="balance-fill" data-width="50"></div>
                        <div class="balance-value" data-position="50">1.25</div>
                    </div>
                    <span>Noisy</span>
                </div>
            </div>

            <!-- Overlap -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Analysis Overlap</div>
                    <div class="label-description">Processing vs detection completeness</div>
                </div>
                <div class="numeric-control">
                    <div class="numeric-input-group">
                        <input type="number"
                               class="numeric-input"
                               value="1.5"
                               min="0"
                               max="3.0"
                               step="0.5"
                               id="overlap"
                               aria-label="Analysis overlap in seconds">
                        <span class="numeric-unit">seconds</span>
                    </div>
                    <div class="numeric-context">
                        <span>↓ Less CPU usage</span>
                        <span>More complete detection ↑</span>
                    </div>
                    <div class="numeric-context text-tertiary">
                        <span>0s: No overlap</span>
                        <span>1.5s: Balanced</span>
                        <span>3s: Maximum</span>
                    </div>
                </div>
            </div>
        </section>

        <!-- Hardware Configuration -->
        <section class="settings-section" aria-labelledby="hardware-title">
            <h2 class="section-title" id="hardware-title">Hardware Configuration</h2>

            <!-- Audio Device -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Audio Input</div>
                    <div class="label-description">Recording device selection</div>
                </div>
                <div class="choice-matrix" role="radiogroup" aria-labelledby="audio-label">
                    <div class="choice-option selected"
                         role="radio"
                         aria-checked="true"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">USB Audio Device</div>
                        <div class="option-details">48 kHz · 16-bit · Low latency · Currently active</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">Built-in BCM2835</div>
                        <div class="option-details">44.1 kHz · 16-bit · Higher latency · Power efficient</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">I2S Microphone</div>
                        <div class="option-details">48 kHz · 24-bit · Best quality · Requires HAT</div>
                    </div>
                </div>
            </div>

            <!-- AI Model -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Detection Model</div>
                    <div class="label-description">AI model selection</div>
                </div>
                <div class="choice-matrix" role="radiogroup" aria-labelledby="model-label">
                    <div class="choice-option selected"
                         role="radio"
                         aria-checked="true"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">BirdNET_6K2_V2.4</div>
                        <div class="option-details">Latest · 6000 species · 142ms/detection · Recommended</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">BirdNET_GLOBAL_3K_V2.3</div>
                        <div class="option-details">Stable · 3000 species · 98ms/detection · Faster</div>
                    </div>
                    <div class="choice-option"
                         role="radio"
                         aria-checked="false"
                         tabindex="0"
                         onclick="selectOption(this)">
                        <div class="choice-radio"></div>
                        <div class="option-name">Custom TFLite Model</div>
                        <div class="option-details">Upload your own · Variable performance</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Location Settings -->
        <section class="settings-section" aria-labelledby="location-title">
            <h2 class="section-title" id="location-title">Location</h2>

            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Coordinates</div>
                    <div class="label-description">For species list and sunrise/sunset</div>
                </div>
                <div class="coordinate-input">
                    <div class="coord-field">
                        <label class="coord-label" for="latitude">Latitude</label>
                        <input type="number"
                               class="coord-input"
                               id="latitude"
                               value="42.9834"
                               min="-90"
                               max="90"
                               step="0.0001"
                               aria-label="Latitude in decimal degrees">
                    </div>
                    <div class="coord-field">
                        <label class="coord-label" for="longitude">Longitude</label>
                        <input type="number"
                               class="coord-input"
                               id="longitude"
                               value="-79.0103"
                               min="-180"
                               max="180"
                               step="0.0001"
                               aria-label="Longitude in decimal degrees">
                    </div>
                </div>
            </div>

            <!-- Timezone -->
            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Timezone</div>
                    <div class="label-description">For scheduling and timestamps</div>
                </div>
                <div class="text-choices" role="radiogroup" aria-label="Timezone selection">
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Toronto
                    </button>
                    <button type="button" class="text-choice selected" onclick="selectTextOption(this)">
                        America/New_York
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Chicago
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Denver
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        America/Los_Angeles
                    </button>
                    <button type="button" class="text-choice" onclick="selectTextOption(this)">
                        UTC
                    </button>
                </div>
            </div>
        </section>

        <!-- Notification Settings -->
        <section class="settings-section" aria-labelledby="notification-title">
            <h2 class="section-title" id="notification-title">Notifications</h2>

            <div class="setting-row">
                <div class="setting-label">
                    <div class="label-text">Notification Frequency</div>
                    <div class="label-description">When to send alerts</div>
                </div>
                <div class="choice-matrix" role="group" aria-labelledby="notification-freq-label">
                    <label class="choice-option">
                        <input type="checkbox" class="sr-only" name="notify_each" checked>
                        <div class="choice-radio"></div>
                        <div class="option-name">Each Detection</div>
                        <div class="option-details">Every bird detected above threshold</div>
                    </label>
                    <label class="choice-option">
                        <input type="checkbox" class="sr-only" name="notify_new_species" checked>
                        <div class="choice-radio"></div>
                        <div class="option-name">New Species</div>
                        <div class="option-details">First time a species is detected</div>
                    </label>
                    <label class="choice-option">
                        <input type="checkbox" class="sr-only" name="notify_daily_new">
                        <div class="choice-radio"></div>
                        <div class="option-name">Daily New Species</div>
                        <div class="option-details">First detection of each species per day</div>
                    </label>
                </div>
            </div>
        </section>

        <!-- Form Controls -->
        <div class="form-controls">
            <button type="submit" class="submit-button">Save Configuration</button>
            <a href="/admin/advanced-settings" class="action-link">YAML Editor</a>
            <span class="action-link ml-auto">Last saved: 2025-01-15 14:32:18</span>
        </div>
    </form>

    <script>
        // Initialize dynamic positioning from data attributes
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize slider positions
            document.querySelectorAll('.slider-handle[data-position]').forEach(handle => {
                const position = handle.getAttribute('data-position');
                handle.style.left = position + '%';
            });

            // Initialize balance fills
            document.querySelectorAll('.balance-fill[data-width]').forEach(fill => {
                const width = fill.getAttribute('data-width');
                fill.style.width = width + '%';
            });

            // Initialize balance values
            document.querySelectorAll('.balance-value[data-position]').forEach(value => {
                const position = value.getAttribute('data-position');
                value.style.setProperty('--position', position + '%');
            });
        });

        // Handle choice selection
        function selectOption(element) {
            const group = element.closest('[role="radiogroup"]');
            group.querySelectorAll('.choice-option').forEach(opt => {
                opt.classList.remove('selected');
                opt.setAttribute('aria-checked', 'false');
            });
            element.classList.add('selected');
            element.setAttribute('aria-checked', 'true');
        }

        // Handle text option selection
        function selectTextOption(element) {
            const group = element.parentElement;
            group.querySelectorAll('.text-choice').forEach(opt => {
                opt.classList.remove('selected');
            });
            element.classList.add('selected');
        }

        // Keyboard navigation for sliders
        document.querySelectorAll('[role="slider"]').forEach(slider => {
            slider.addEventListener('keydown', (e) => {
                const currentValue = parseFloat(slider.getAttribute('aria-valuenow'));
                const min = parseFloat(slider.getAttribute('aria-valuemin'));
                const max = parseFloat(slider.getAttribute('aria-valuemax'));
                const step = (max - min) / 10;

                let newValue = currentValue;

                switch(e.key) {
                    case 'ArrowLeft':
                    case 'ArrowDown':
                        newValue = Math.max(min, currentValue - step);
                        e.preventDefault();
                        break;
                    case 'ArrowRight':
                    case 'ArrowUp':
                        newValue = Math.min(max, currentValue + step);
                        e.preventDefault();
                        break;
                    case 'Home':
                        newValue = min;
                        e.preventDefault();
                        break;
                    case 'End':
                        newValue = max;
                        e.preventDefault();
                        break;
                }

                if (newValue !== currentValue) {
                    updateSliderValue(slider, newValue, min, max);
                }
            });
        });

        // Update slider value and position
        function updateSliderValue(slider, value, min, max) {
            const percent = ((value - min) / (max - min)) * 100;
            slider.setAttribute('aria-valuenow', value);

            const handle = slider.querySelector('.slider-handle');
            if (handle) {
                handle.style.left = percent + '%';
                handle.setAttribute('data-position', percent);
                const valueDisplay = handle.querySelector('.slider-value');
                if (valueDisplay) {
                    valueDisplay.textContent = value.toFixed(2);
                }
            }

            const fill = slider.querySelector('.balance-fill');
            if (fill) {
                fill.style.width = percent + '%';
                fill.setAttribute('data-width', percent);
            }

            const balanceValue = slider.querySelector('.balance-value');
            if (balanceValue) {
                balanceValue.style.setProperty('--position', percent + '%');
                balanceValue.setAttribute('data-position', percent);
                balanceValue.textContent = value.toFixed(2);
            }
        }

        // Make sliders draggable
        document.querySelectorAll('.slider-handle, .balance-bar').forEach(element => {
            let isDragging = false;
            const slider = element.closest('[role="slider"]') || element;

            element.addEventListener('mousedown', (e) => {
                isDragging = true;
                e.preventDefault();
            });

            document.addEventListener('mousemove', (e) => {
                if (!isDragging) return;

                const rect = slider.getBoundingClientRect();
                const percent = Math.max(0, Math.min(100, ((e.clientX - rect.left) / rect.width) * 100));

                const min = parseFloat(slider.getAttribute('aria-valuemin'));
                const max = parseFloat(slider.getAttribute('aria-valuemax'));
                const value = min + (percent / 100) * (max - min);

                updateSliderValue(slider, value, min, max);
            });

            document.addEventListener('mouseup', () => {
                isDragging = false;
            });
        });
    </script>
</body>
</html>
