# Docker Compose configuration for running tests
# Uses a single test volume but only deletes the runtime database between tests
services:
  # Init container to ensure assets are installed
  birdnet-pi-init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: birdnet-pi-test-init
    environment:
      BIRDNET_ASSETS_VERSION: ${BIRDNET_ASSETS_VERSION:-v2.1.0}
      BIRDNETPI_DATA: /var/lib/birdnetpi
    command: >
      sh -c "
      echo 'Checking and installing BirdNET assets if needed...' &&
      uv run install-assets install $${BIRDNET_ASSETS_VERSION} --skip-existing &&
      echo 'Assets ready!'
      "
    volumes:
      # Use test data volume
      - birdnet-test-data:/var/lib/birdnetpi
    networks:
      - birdnetpi-network

  birdnet-pi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: birdnet-pi-test
    restart: unless-stopped
    depends_on:
      birdnet-pi-init:
        condition: service_completed_successfully
    environment:
      PULSE_SERVER: host.docker.internal
      DOCKER_CONTAINER: "true"
      BIRDNET_ASSETS_VERSION: ${BIRDNET_ASSETS_VERSION:-v2.1.0}
      BIRDNETPI_DATA: /var/lib/birdnetpi
    ports:
      - "8000:8000"   # Caddy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 5s
      timeout: 10s
      retries: 5
    command: /usr/bin/supervisord -c /etc/supervisor/supervisord.conf -u birdnetpi
    volumes:
      # Use test data volume (persistent between test runs to preserve models)
      - birdnet-test-data:/var/lib/birdnetpi
      - ~/.config/pulse:/home/birdnetpi/.config/pulse
    networks:
      - birdnetpi-network

volumes:
  # Test data volume - persists between test runs to avoid re-downloading models
  # Only the birdnetpi.db file is deleted between tests
  birdnet-test-data:
    driver: local

networks:
  birdnetpi-network:
    driver: bridge
