[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
  {include-group = "profiling"},
  "httpx>=0.28.1",
  "pandas-stubs",
  "pyleak>=0.1.14",
  "pytest-asyncio>=0.23.8",
  "pytest-cov>=6.2.1",
  "pytest-mock==3.7.0",
  "pytest-timeout>=2.4.0",
  "pytest>=7.1.2",
  "scipy-stubs>=1.16.1.1",
  "types-decorator>=5.2.0.20250324",
  "types-paho-mqtt",
  "types-pillow>=10.2.0.20240822",
  "types-psutil",
  "types-pytz",
  "types-requests>=2.32.4.20250611",
  "types-setuptools",
  "types-sqlalchemy>=1.4.53.38",
  "types-tqdm",
  "types-tzlocal",
  "types-urllib3>=1.26.25.14"
]
profiling = [
  "pyinstrument>=5.1.1"
]

[project]
name = "birdnet-pi"
version = "2.0.0a"
description = "The next generation of real-time, acoustic bird classification."
authors = [
  {name = "Matthew de Verteuil", email = "mverteuil@users.noreply.github.com"},
  {name = "Patrick McGuire", email = "mcguirepr89@users.noreply.github.com"}
]
requires-python = "==3.11.*"
dependencies = [
  "pip",
  "wheel",
  "setuptools",
  "ai-edge-litert<1.4.0",
  "aiohttp>=3.11.11",
  "aiosqlite>=0.21.0",
  "alembic>=1.13.0",
  "altair<5",
  "apprise==1.2.1",
  "astral",
  "babel>=2.14.0",
  "blinker>=1.9.0",
  "click>=8.2.1",
  "colorama==0.4.4",
  "dependency-injector==4.48.1",
  "fastapi",
  "gpsdclient",
  "greenlet>=3.2.3",
  "httpx>=0.28.1",
  "librosa",
  "numpy<2",
  "openpyxl>=3.1.5",
  "packaging>=25.0",
  "paho-mqtt",
  "pandas",
  "plotly",
  "psutil>=7.0.0",
  "pydub>=0.25.1",
  "python-multipart",
  "python-systemd>=0.0.9",
  "pytz",
  "redis[hiredis]>=5.0.0",
  "resampy",
  "seaborn",
  "sounddevice>=0.5.2",
  "sqladmin>=0.21.0",
  "sqlalchemy",
  "sqlmodel>=0.0.24",
  "structlog>=25.4.0",
  "suntime",
  "tqdm>=4.67.1",
  "tzlocal",
  "uvicorn",
  "websockets>=15.0.1",
  "wtforms>=3.1.2"
]

[project.optional-dependencies]
epaper = [
  "waveshare-epd",
  "lgpio>=0.2.2.0; platform_machine=='armv7l' or platform_machine=='aarch64'",
  "gpiozero>=2.0; platform_machine=='armv7l' or platform_machine=='aarch64'",
  "RPi.GPIO>=0.7.1; platform_machine=='armv7l' or platform_machine=='aarch64'",
  "spidev>=3.6; platform_machine=='armv7l' or platform_machine=='aarch64'",
  "Pillow>=10.0.0; platform_machine=='armv7l' or platform_machine=='aarch64'"
]

[project.scripts]
audio-analysis-daemon = "birdnetpi.daemons.audio_analysis_daemon:main"
audio-capture-daemon = "birdnetpi.daemons.audio_capture_daemon:main"
audio-websocket-daemon = "birdnetpi.daemons.audio_websocket_daemon:main"
epaper-display-daemon = "birdnetpi.daemons.epaper_display_daemon:main"
update-daemon = "birdnetpi.daemons.update_daemon:main"
backfill-weather = "birdnetpi.cli.backfill_weather:backfill_weather"
configure-pulseaudio = "birdnetpi.cli.configure_pulseaudio:main"
generate-dummy-data = "birdnetpi.cli.generate_dummy_data:main"
install-assets = "birdnetpi.cli.install_assets:main"
manage-releases = "birdnetpi.cli.manage_releases:main"
manage-translations = "birdnetpi.cli.manage_translations:main"
profile-landing-page = "birdnetpi.cli.profile_landing_page:main"
setup-system = "birdnetpi.cli.setup_system:main"

[project.urls]
Homepage = "https://github.com/mverteuil/BirdNET-Pi"
Repository = "https://github.com/mverteuil/BirdNET-Pi"
Issues = "https://github.com/mverteuil/BirdNET-Pi/issues"

[tool.coverage.run]
source = ["src/birdnetpi"]
omit = [
  "tests/*",
  "*/dependency_injector/*",
  "/private/var/folders/*",
  "/tmp/*",
  "*/pytest-of-*"
]

[tool.pyright]
exclude = ["**/build", "**/__pycache__"]
include = ["src", "tests"]
pythonVersion = "3.11"
reportMissingTypeStubs = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"
reportUnnecessaryIsInstance = "none"
typeCheckingMode = "standard"
useLibraryCodeForTypes = true
venv = ".venv"
venvPath = "."

[tool.pytest.ini_options]
markers = [
  "expensive",
  "no_leaks: detect asyncio task leaks, thread leaks, and event loop blocking"
]
testpaths = ["tests"]
norecursedirs = ["docs", "*.egg-info", ".git", ".venv", "data"]
addopts = ["--cov=src", "--cov-branch", "--cov-config=pyproject.toml"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
  "A", # Builtin shadowing
  "ANN", # Annoyance (missing type annotations)
  "B", # Bugbear
  "C", # Complexity
  "D", # Docstrings (optional, but good for clarity)
  "E", # Error
  "F", # Pyflakes
  "I", # Isort
  "N", # Naming
  "RUF", # Ruff-specific rules
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "W" # Warning
]
ignore = [
  "ANN204", # Missing return type annotation for special method `__init__`
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in public method
  "D107", # Missing docstring in __init__
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start on the second line
  "D400", # First line should end with a period
  "D406", # Section name should end with a colon
  "D407", # Missing dashed underline after section header
  "D413", # Missing blank line after last section
  "D415" # First line should end with a period, question mark, or exclamation point
]
unfixable = ["TID252"] # Disallow `from ... import *`

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.uv.sources]
waveshare-epd = {git = "https://github.com/waveshareteam/e-Paper.git", subdirectory = "RaspberryPi_JetsonNano/python"}
